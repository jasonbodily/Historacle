<div class="container-fluid">
  <div class="row-fluid">
    <div class="span8">

      <div id="map-wrapper">
        <div id="map">

        </div>
      </div>

      <div id="timeline-wrapper">
        <div>

        </div>
      </div>

    </div>
    <div class="span4">
      <div id="key-wrapper">
        <div>

        </div>
      </div>
      <div id="oracle-wrapper">
        <div>

        </div>
      </div>
    </div>
  </div>
</div>

<style type="text/css">

   body {
      height: 1000px;
      background-image: -moz-linear-gradient(top, #303030, #3A3A3A);
      background-image: -webkit-gradient(linear, left top, left bottom, from(#303030), to(#3A3A3A));
      background-image: -webkit-linear-gradient(top, #303030, #3A3A3A);
   }

   .navbar-fixed-top .navbar-inner {
      background: transparent;
      border: none;
   }

   #map-wrapper {
      background: #002300;
   }

   #map {
      border-top: 1px solid #595959;
      height: 660px;
      width: 100%;
   }

   #timeline-wrapper {
      border-top: 1px solid #595959;
      /*background: #f08080;*/
   }

   #timeline-wrapper > div {
      border-top: 1px solid #595959;
      height: 120px;
      width: 100%;

      /*background: #3A3A3A;*/
      /*background-image: -moz-linear-gradient(top, #414141, #323232);*/
      /*background-image: -ms-linear-gradient(top, #414141, #323232);*/
      /*background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#414141), to(#323232));*/
      /*background-image: -webkit-linear-gradient(top, #414141, #323232);*/
      /*background-image: -o-linear-gradient(top, #414141, #323232);*/
      /*background-image: linear-gradient(top, #414141, #323232);*/
      /*background-repeat: repeat-x;*/
      /*filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#414141', endColorstr='#323232', GradientType=0);*/
      /*border-bottom: 1px solid #000;*/
   }

   #key-wrapper {
      background: #add8e6;
   }

   #key-wrapper > div {
      height: 180px;
      width: 100%;
   }

   #oracle-wrapper {
      height: 600px;
      width: 100%;
      background: #fafad2;
   }

   #oracle-wrapper > div {
      height: 100%;
      width: 100%
   }

</style>







<%#= Event.first.to_json.html_safe %>
<script type="text/javascript">

   var po = org.polymaps;

   /* Country name -> population (July 2010 Est.). */
   var population = tsv("/population.tsv")
      .key(function (l) {
         return l[1];
      })
      .value(function (l) {
         return l[2].replace(/,/g, "");
      })
      .map();

   /* Country name -> internet users (2008). */
   var internet = tsv("/internet.tsv")
      .key(function (l) {
         return l[1];
      })
      .value(function (l) {
         return l[2].replace(/,/g, "");
      })
      .map();

   var map = po.map()
      .container(document.getElementById("map").appendChild(po.svg("svg")))
      .center({lat:40, lon:0})
      .zoomRange([2, 6])
      .zoom(3)
      .add(po.interact());

   map.add(po.image()
      .url("http://s3.amazonaws.com/com.modestmaps.bluemarble/{Z}-r{Y}-c{X}.jpg"));

   map.add(po.geoJson()
      .url("world3.json")
      .tile(false)
      .zoom(3)
      .on("load", load));

   map.add(po.compass()
      .pan("none"));

   map.container().setAttribute("class", "YlOrRd");

   /** Set feature class and add tooltip on tile load. */
   function load(e) {
      for (var i = 0; i < e.features.length; i++) {
         var feature = e.features[i],
            n = feature.data.properties.name,
            v = internet[n] / population[n];
         createJElement(feature.element)
            .attr("class", isNaN(v) ? null : "q" + ~~(v * 9) + "-" + 9)
            .add("svg:title")
            .text(n + (isNaN(v) ? "" : ":  " + percent(v)));
      }
   }

   /** Formats a given number as a percentage, e.g., 10% or 0.02%. */
   function percent(v) {
      return (v * 100).toPrecision(Math.min(2, 2 - Math.log(v) / Math.LN2)) + "%";
   }

</script>
